"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

# from pathlib import Path
#
# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
#
# import os
# from dotenv import load_dotenv
# # Загрузка переменных окружения из файла .env
# load_dotenv()
# # Получаем секретный ключ из .env
# SECRET_KEY = os.getenv('SECRET_KEY', 'your-default-secret-key')  # Укажите дефолтное значение для безопасности
# DEBUG = os.getenv('DEBUG', 'True') == 'True'
# # Настройки базы данных для MySQL
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # Используем MySQL
#         'NAME': os.getenv('DB_NAME', 'housing_rental_db'),  # Название базы данных
#         'USER': os.getenv('DB_USER', 'your_mysql_user'),  # Имя пользователя MySQL
#         'PASSWORD': os.getenv('DB_PASSWORD', 'your_mysql_password'),  # Пароль пользователя
#         'HOST': os.getenv('DB_HOST', 'localhost'),  # Хост базы данных, например localhost
#         'PORT': os.getenv('DB_PORT', '3306'),  # Порт базы данных, стандартный 3306
#     }
# }
# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
#
# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-6z#s-h$3sd=ob1c4j19(96&#ub#fb4bqd_sx^p+v8s$^ns9*eo'
#
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
#
# ALLOWED_HOSTS = []
#
#
# # Application definition
#
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]
from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent
import os
from dotenv import load_dotenv
# Загрузка переменных окружения из файла .env
load_dotenv()
# Получаем секретный ключ из .env
SECRET_KEY = os.getenv('SECRET_KEY')  # Укажите дефолтное значение для безопасности
DEBUG = os.getenv('DEBUG') == 'True'

ALLOWED_HOSTS = []
# Настройки базы данных
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # Используем MySQL
        'NAME': os.getenv('DB_NAME'),  # Название базы данных
        'USER': os.getenv('DB_USER'),  # Имя пользователя MySQL
        'PASSWORD': os.getenv('DB_PASSWORD'),  # Пароль пользователя
        'HOST': os.getenv('DB_HOST'),  # Хост базы данных, например localhost
        'PORT': os.getenv('DB_PORT'),  # Порт базы данных, стандартный 3306
    }
}
# Настройки для приложения
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'accounts',
    'listings',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


AUTH_USER_MODEL = 'accounts.CustomUser'

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_REDIRECT_URL = 'profile'
